
@{
    ViewBag.Title = "Add";
}
@model AssginmentCrud.Product
@if (Convert.ToBoolean(ViewData["IsUpdate"]))
{
    <h2>Update Product</h2>
}
else
{
    <h2>Add Product</h2>
}

@using (Html.BeginForm("AddProduct", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description)
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Prize)
        @Html.EditorFor(model => model.Prize, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.Prize, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Quantity)
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <a href="/Home" class="btn btn-default"> <span>Cancel</span></a>
        @if (Convert.ToBoolean(ViewData["IsUpdate"]))
        {
            <input type="submit" class="btn btn-success" value="Update">
        }
        else
        {
            <input type="submit" class="btn btn-success" value="Add">
        }
    </div>
}


